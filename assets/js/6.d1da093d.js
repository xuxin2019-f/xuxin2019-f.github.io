(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{479:function(t,s,a){t.exports=a.p+"assets/img/DNS.a5dcaa59.png"},504:function(t,s,a){"use strict";a.r(s);var n=a(59),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"浏览器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),n("h2",{attrs:{id:"从输入-url-到页面显示的经历过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到页面显示的经历过程"}},[t._v("#")]),t._v(" 从输入 url 到页面显示的经历过程")]),t._v(" "),n("ul",[n("li",[t._v("输入地址过程中浏览器的智能查询来匹配")]),t._v(" "),n("li",[t._v("输入完成后开始解析 url 获取协议、主机、端口、path，组装 HTTP 请求报文")]),t._v(" "),n("li",[t._v("查找 ip 地址（DNS 解析）\n"),n("img",{attrs:{src:a(479),alt:"DNS解析"}}),t._v("\n解析域名:首先在本地 hosts 文件中查询是否有和这个域名对应的 ip 关系规则，如果有直接用；如果没有，浏览器发起"),n("strong",[t._v("DNS 请求到本地 DNS 服务器")]),t._v("，开始查询，进行"),n("strong",[t._v("递归查询")]),t._v("，如果本地"),n("strong",[t._v("DNS 服务器的缓存")]),t._v("有这条规则，则直接用，如果没有，向 DNS 根服务器进行"),n("strong",[t._v("迭代查询")])]),t._v(" "),n("li",[t._v("建立服务器 TCP/IP 连接（三次握手进行连接），开始 HTTP 请求\n拿到 ip 地址后，发起 HTTP 请求，"),n("strong",[t._v("客户端发起 TCP 连接请求，建立 TCP/IP 连接")]),t._v("，"),n("strong",[t._v("握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。（即 TCP 链接建立后才发送 HTTP 请求")])]),t._v(" "),n("li",[t._v("可能涉及到重定向\n如果存在网站调整，网页被移到新的地址，或者是网页扩展名改变了，又比如我们搜索的是 baidu.com，其实要访问的是 www.baidu.com，这个时候服务端会响应 301 永久重定向响应")])]),t._v(" "),n("p",[t._v("这里有涉及到 301 和 302 状态码的区别：301 是永久重定向，302 是临时重定向（302 又在 http1.1 中由于幂等操作分为 303 和 307,303 代表不考虑非幂等操作，直接以 get 访问 location 的地址，307 要以 post 重新请求 location 的地址）")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("客户端向重定向发起 HTTP 请求（请求报文），大网站涉及到 nginx 反向代理，再分配给真正的服务器（即可能存在服务器将请求转发的过程）")])]),t._v(" "),n("li",[t._v("服务器解析请求报文，检查 HTTP 请求头中是否"),n("strong",[t._v("包含缓存验证信息")]),t._v("，"),n("strong",[t._v("如果验证缓存新鲜，则返回 304 状态码，如果缓存不新鲜需要更新，返回 200 状态码")])]),t._v(" "),n("li",[t._v("服务器处理程序读取完整请求并准备 HTTP 响应，可能有查询数据库等操作，"),n("strong",[t._v("然后服务器将响应报文通过 TCP 连接发送回浏览器")])]),t._v(" "),n("li",[t._v("浏览器接收到 HTTP 响应后根据情况选择关闭 TCP 连接或保留重用，如果关闭执行 TCP 四次挥手：")]),t._v(" "),n("li",[n("strong",[t._v("TCP 四次挥手，释放连接（http1.0）")])]),t._v(" "),n("li",[t._v("浏览器检查响应状态码是否为 1XX，3XX， 4XX， 5XX，这些情况处理与 2XX 不同；")]),t._v(" "),n("li",[n("strong",[t._v("如果资源可缓存，进行缓存")])]),t._v(" "),n("li",[n("strong",[t._v("对响应进行解码（例如 gzip 压缩）")])]),t._v(" "),n("li",[t._v("根据资源类型决定如何处理，假设资源为 HTML 文档：解析将服务端响应的 html 文件解析并渲染 HTML 页面（自上而下）不同浏览器内核渲染稍有不同，以 webkit 为例：\n"),n("strong",[t._v("先解析 html 构建 dom 树；再解析 css 构建 css 规则树；执行 js 代码；（这三者没有严格的先后顺序）dom 树和 css 规则树构建渲染树；对这个渲染树中的所有盒模型进行大小计算、确认布局，这个过程称为 reflow 或 layout；最后进行渲染，称为 repain；")])]),t._v(" "),n("li",[t._v("当解析 HTML 的时候发现新的资源（link、script、img、iframe、video、audio 等带有 href 或 src 这类外部资源链接的属性的资源标签，注意 a 标签不会），"),n("strong",[t._v("浏览器发起新一轮的请求")])]),t._v(" "),n("li",[t._v("显示页面（HTML 解析过程中会初步显示页面）")])]),t._v(" "),n("h2",{attrs:{id:"浏览器缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),n("h3",{attrs:{id:"面试题：在-css-js-代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次-js-请求一般情况下有哪些地方会有缓存处理？（这些缓存都是为了解决网络延迟，提高用户体验"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试题：在-css-js-代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次-js-请求一般情况下有哪些地方会有缓存处理？（这些缓存都是为了解决网络延迟，提高用户体验"}},[t._v("#")]),t._v(" 面试题：在 css/js 代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次 js 请求一般情况下有哪些地方会有缓存处理？（"),n("strong",[t._v("这些缓存都是为了解决网络延迟，提高用户体验")])]),t._v(" "),n("p",[n("strong",[t._v("浏览器缓存，"),n("code",[t._v("dns")]),t._v("缓存，"),n("code",[t._v("cdn")]),t._v("缓存，服务器缓存")]),t._v(" "),n("strong",[t._v("dns 缓存")]),t._v("：指在 dns 返回正确的 pi 之后，系统会将这个结果临时储存起来，并为它设定一个失效时间，在失效时间之内，浏览器再次访问这个网站时，系统会直接从电脑本地的 dns 缓存中找到这个 ip 地址，不必再去询问 dns 服务器，变相加速了网址的解析\n"),n("strong",[t._v("cdn 缓存")]),t._v("：为了提高距离较远的地区的用户的访问速度，创建了一些最接近用户网络的边缘服务器，将文件缓存在这些边缘服务器上，这就是 CDN 缓存\n"),n("strong",[t._v("浏览器缓存")]),t._v(":\n浏览器启用缓存的优点："),n("strong",[t._v("减少页面加载速度，减小服务器负载")])]),t._v(" "),n("p",[t._v("浏览器是否使用缓存，缓存多久，是由服务器控制的，当浏览器请求一个网页或其他资源时，服务器返回的响应头部分的某些字段指明了有关缓存的关键信息")]),t._v(" "),n("p",[t._v("大致流程：")]),t._v(" "),n("p",[t._v("发送请求后，要先 1.判断浏览器内是否有上次请求后留下的缓存，如果存在缓存，2.再判断是否命中强缓存（"),n("strong",[t._v("浏览器第一次跟服务器请求资源时，服务器在返回资源的同时，会在 response 的 header 中加上 Expires 或 catch-control 的 header")]),t._v("）：")]),t._v(" "),n("ul",[n("li",[t._v("判断是否有 Catch-Control：以秒为单位（表示从第一次请求开始到截止时间的总共时间，当浏览器再次请求这个资源时，超过这个时间，就无法命中强缓存了）")]),t._v(" "),n("li",[t._v("判断是否有 Expires：如果没有 catch-control，则查找是否有 expires，表示资源过期的截止时间，超过这个截止时间，无法命中强缓存")])]),t._v(" "),n("p",[n("strong",[t._v("如果存在强缓存，则返回状态码 200，直接用缓存内容，不会发请求到服务端")])]),t._v(" "),n("p",[t._v("3.如果没有强缓存，则发送请求到服务端查看是否存在协商缓存：")]),t._v(" "),n("ul",[n("li",[t._v("发送"),n("strong",[t._v("If-None-Match")]),t._v("请求，判断"),n("strong",[t._v("Etag")]),t._v("是否相同（如果资源不变，Etag 不发生改变），如果相同，则返回状态码"),n("strong",[t._v("304 Not Modified")]),t._v("，直接用本地缓存")]),t._v(" "),n("li",[t._v("如果没有 Etag，则查找是否有"),n("strong",[t._v("Last-Modefied")]),t._v("的 header，有则发送"),n("strong",[t._v("If-Modified-Since")]),t._v("请求（内容就是 Last-Modefied 的值），服务器根据这个请求和服务器现在自身的资源做比较，判断是否资源发生了更新，如果没有变化，返回状态码"),n("strong",[t._v("304 Not Modified")]),t._v("，如果有变化，则客户端要从服务端请求资源")])]),t._v(" "),n("p",[t._v("上面两个的区别是：如果没有改变返回 304，response header 还会返回 Etag（就算是相同的），但是不会返回 Last Modefied（相同则直接保存的 Last Modefied）")]),t._v(" "),n("h2",{attrs:{id:"浏览器存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" 浏览器存储")]),t._v(" "),n("h4",{attrs:{id:"_1-cookie-与-session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-cookie-与-session"}},[t._v("#")]),t._v(" 1.cookie 与 session")]),t._v(" "),n("p",[t._v("cookie 的作用是维持状态（因为 http 是无状态的，一次连接后就关闭了），产生 cookie 的过程是：客户端第一次发送请求时，服务端检查请求头中是否有 cookie，如果没有，则为这个用户生成一个 session 和 sessionid，并以 sessionid 为值生成 cookie 作为响应头数据返回给客户端，在客户端保存着 cookie，以后"),n("strong",[t._v("客户端每次发请求都会携带着这个 cookie")]),t._v("，以便服务端作身份验证。**即 cookie 是服务端产生保存在客户端的，session 是保存在服务端的。**应用场景：用户登录、购物车购物")]),t._v(" "),n("p",[t._v("生成 cookie 的方式")]),t._v(" "),n("ul",[n("li",[t._v("在响应头中 set-cookie（还可以设置 expires 过期时间）")]),t._v(" "),n("li",[t._v("js 中通过 document.cookie 进行读（indexOf）写")])]),t._v(" "),n("p",[t._v("​ cookie 的缺点：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("**同源限制（重要）**https://www.cnblogs.com/liaojie970/p/7606168.html")]),t._v(" "),n("p",[n("strong",[n("em",[t._v("即 cookie 只能在同源页面下相互共享，相同的还有 localStorage 和 indexDB，这样做是为了防止恶意网站窜取 cookie，保证用户安全")])])])]),t._v(" "),n("li",[n("p",[t._v("​ "),n("strong",[t._v("cookie 是明文携带的，安全性低，容易被攻击（比如 XSS 攻击和 CSRF 攻击）")]),t._v("，所以只能放不敏感的信息，敏感信息还是只能存在 session 中，但这样会增加服务器负担，所以高访问量的网址不会选择 session 考虑性能还是只能选择 cookie")])]),t._v(" "),n("li",[n("p",[t._v("cookie 可携带体积很小，只有 4k，原则上 cookie 携带量不能超过 20 条")])]),t._v(" "),n("li",[n("p",[t._v("存在 cookie 后客户端每次发送请求都会携带 cookie，在许多不需要应用到 cookie 的场合会造成严重的资源浪费")])]),t._v(" "),n("li",[n("p",[t._v("cookie 可以被禁用删除和篡改，当被禁用时传递 sessionid 给服务端的方式是：")]),t._v(" "),n("ul",[n("li",[t._v("重写 url：即在 url 后写 sessionid=。。。。。。")]),t._v(" "),n("li",[t._v("在表单里加一个 type=hidden 的 input 框，value 为 sessionid")])])])]),t._v(" "),n("h4",{attrs:{id:"_2-web-storage"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-web-storage"}},[t._v("#")]),t._v(" 2.web Storage")]),t._v(" "),n("p",[t._v("为了解决 cookie 存在的问题，html5 提出了 web Storage，分为 localStorage 和 sessionStorage，"),n("strong",[t._v("这两个都不需要向服务端发送请求，都是存储在本地的，且存储体积更大 5-10M 左右")])]),t._v(" "),n("ul",[n("li",[t._v("localStorage")])]),t._v(" "),n("p",[t._v("​ 永久存储在本地，"),n("strong",[n("em",[t._v("所有同源页面下资源共享（同 cookie）")])]),t._v("，"),n("strong",[t._v("即可以跨页面跨窗口")]),t._v("，读写方法：")]),t._v(" "),n("p",[t._v("localStorage.setItem('key','value')")]),t._v(" "),n("p",[t._v("localStorage.getItem('key')")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("sessionStorage")]),t._v(" "),n("p",[t._v("存储时间为一次会话（即一直到该窗口关闭为止），"),n("strong",[t._v("不能跨窗口（但可以刷新跨页面），当你开启新的会话时，它也需要相应的更新或释放。比如微博的 sessionStorage 就主要是存储你本次会话的浏览足迹")])]),t._v(" "),n("p",[t._v("读写方法：")]),t._v(" "),n("p",[t._v("sessionStorage.setItem('key','value')")]),t._v(" "),n("p",[t._v("sessionStorage.getItem('key')")])])]),t._v(" "),n("p",[n("strong",[t._v("web Storage 是 cookie 的扩展，但是也不能支持大数据的存储")])]),t._v(" "),n("h4",{attrs:{id:"_3-indexeddb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-indexeddb"}},[t._v("#")]),t._v(" 3.indexedDB")]),t._v(" "),n("p",[t._v("IndexedDB 是一种低级 API，"),n("strong",[t._v("用于客户端存储大量结构化数据(包括文件和 blobs)")]),t._v("。理论上来说，IndexedDB 是没有存储上限的（一般来说不会小于 250M）。它不仅可以存储字符串，还可以存储二进制数据。")]),t._v(" "),n("p",[t._v("建立打开 IndexedDB ----"),n("code",[t._v('window.indexedDB.open("testDB")')])]),t._v(" "),n("p",[t._v("关闭 IndexedDB----"),n("code",[t._v("indexdb.close()")])]),t._v(" "),n("p",[t._v("删除 IndexedDB----"),n("code",[t._v("window.indexedDB.deleteDatabase(indexdb)")])]),t._v(" "),n("h2",{attrs:{id:"浏览器内核"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),n("p",[t._v("浏览器内核主要分为渲染引擎和 js 引擎")]),t._v(" "),n("p",[t._v("渲染引擎负责获取页面内容（html、xml、图像等），获取 css 样式，计算页面布局和盒子大小，渲染 dom 树和 css 规则树，再合并成渲染树实现渲染，不同的内核渲染的方式有所区别，对语法的解释也会有所不同")]),t._v(" "),n("p",[t._v("js 引擎指的是解析和执行 JavaScript 来实现网页的动态效果")]),t._v(" "),n("p",[t._v("常见的浏览器内核有：")]),t._v(" "),n("p",[t._v("IE：trident ；chrome、safari、opera：webkit（blink）；firefox：gecko")]),t._v(" "),n("h2",{attrs:{id:"跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),n("p",[t._v("产生跨域的原因是浏览器的同源政策，浏览器规定 ajax 请求必须在同源条件下进行（即请求地址与原地址的协议，域名，端口都相同），否则会发生拦截")]),t._v(" "),n("p",[t._v("解决跨域的方法")]),t._v(" "),n("h4",{attrs:{id:"jsonp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[t._v("#")]),t._v(" jsonp")]),t._v(" "),n("p",[t._v("jsonp 的原理是 script 标签的 src 属性是不受跨域限制的。具体操作方法是：将不同源的请求地址写在客户端的 script 标签中，并在客户端中定义一个全局函数，用于操作服务端返回来的数据，在服务端返回一个字符串，字符串内包含的是客户端定义的全局函数，服务端返回的数据写在这个函数的参数里")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("客户端：\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.wq.com'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n服务端  字符串里的函数名要和客户端定义的函数名一一对应\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fn({name:'")]),t._v("zhangsan"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("',age:18})'")]),t._v("\nres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("jsonp 的封装("),n("strong",[t._v("实现 script 标签的动态添加")]),t._v(")")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("期望的格式：\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:80/xxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("datas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("datas"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" params "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" attr "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        params "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'&'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("attr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fnname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jsonp'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建全局函数")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("success\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?callback='")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("fnname"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("params\n    document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("jsonp 缺点：因为 script 标签的请求都是 get 请求，所以只能局限于 get 请求")])]),t._v(" "),n("h4",{attrs:{id:"cors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),n("p",[t._v("原理是在服务器端对请求响应做出检查（分析出简单请求和预检请求），并相应的做出响应请求头的处理，从而允许跨域请求")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 原生\napp.use((req,res,next)=>{\n  res.header('Access-Control-Allow-Origin','允许请求的地址，如果写*则代表允许所有地址请求，但涉及是否带cookie时不允许写*')\n  res.header('Access-Control-Allow-Method','GET','POST',,,,)\n  res.header('Access-Control-Allow-Credentials',true)\n  next()\n})\n")])])]),n("p",[n("strong",[t._v("注意：CORS 有简单请求和预检请求")])]),t._v(" "),n("p",[t._v("简单请求：请求方式只能是 get、post、head，并且不能自定义响应头，content-type 也不能是 application/json。")]),t._v(" "),n("p",[t._v("预检请求：请求方式是别的，自定义了 headers，content-type 是 application/json")]),t._v(" "),n("p",[t._v("详细见 Node/note/03-网络编程")]),t._v(" "),n("h4",{attrs:{id:"客户端正向代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端正向代理"}},[t._v("#")]),t._v(" 客户端正向代理")]),t._v(" "),n("p",[t._v("由于跨域的限制只存在于浏览器，服务端是不存在这个限制的")]),t._v(" "),n("p",[t._v("原理是"),n("strong",[t._v("请求同源")]),t._v("的服务器，通过该服务器"),n("strong",[t._v("转发")]),t._v("请求至目的服务器，得到结果再"),n("strong",[t._v("转发")]),t._v("给前端")]),t._v(" "),n("p",[n("strong",[t._v("即代理服务器假装自己是客户端，去请求真实的服务器，然后返回数据给客户端")])]),t._v(" "),n("p",[t._v("在 node 中可以使用第三方模块 http-proxy-middleware（"),n("strong",[t._v("vuecli，webpack 都是用的这个包")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var proxy = require('http-proxy-middleware');\nvar options = {\n        target: 'http://localhost:8088', // 目标主机\n        changeOrigin: true,               // 需要虚拟主机站点\n    };\nvar exampleProxy = proxy(options);  //开启代理功能，并加载配置\napp.use('/', exampleProxy);//对地址为’/‘的请求全部转发\n")])])]),n("p",[t._v("在 vue-cli 中配置：")]),t._v(" "),n("p",[t._v("vue-cli2.x 在 config/index.js 下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module.exports = {\n  dev:{\n    proxyTable: {\n       '/api':{\n          target:'xxxx',\n          secure:true //是否开启https请求\n          changeOrigin:true //是否跨域，必须设置，开启代理后在本地会创建一个虚拟服务端发送请求\n          pathRewrite:{'^/api':''}//路径重写\n          比如http请求本来是axios.get(‘http://10.18.110.107/tasktime’,{params:{num:12})\n就可以写成axios.get(’/api/tasktime’,{params:{num:12}) 实现跨域\n       }\n    }\n  }\n}\n")])])]),n("p",[t._v("vue-cli 3.x")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// vue.config.js 如果没有就新建\nmodule.exports = {\n   devServer: {\n   port: 8000,\n   proxy: {\n     "/api": {\n     target: "http://localhost:8080"\n     }\n   }\n }};\n')])])]),n("p",[t._v("在 nuxt.js 中配置反向接口：在 nuxt.config.js 下配置")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" proxy:{\n    '/api/' :{\n      // 转发\n      target:'http://localhost:7003',\n      secure:false,\n      pathRewrite:{\n        '^/api':\"\"\n      }\n    }\n  }\n")])])]),n("p",[t._v("webpack（4.x）")]),t._v(" "),n("p",[t._v("在 webpack 中可以配置 proxy 来快速获得接口代理的能力")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("module.exports = {\n   ....\n   devServer:{\n      port:8000, //当前前端端口\n      proxy:{\n        '/api':{\n           target:'http://localhost:8080',\n           pathRewrite:{\n             '^/api':''\n           }\n        }\n      }\n   }\n}\n")])])]),n("h4",{attrs:{id:"服务端反向代理-nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务端反向代理-nginx"}},[t._v("#")]),t._v(" 服务端反向代理(Nginx)")]),t._v(" "),n("p",[t._v("代理服务器对于客户端来说就是真实的服务器，当客户端请求之后，这个代理服务器会分发请求")]),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment"),t._v(" "),n("comment")],1)}),[],!1,null,null,null);s.default=e.exports}}]);